name: integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

jobs:

  # Build bundle, doc and check linter
  build:
    name: Build bundle, check Linter and generate documentation
    runs-on: ubuntu-latest
    steps:

      # Use specific Node.js version
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.17
          cache: 'npm'

      # Install packages
      - name: Install packages
        run: npm ci

      # Prepare before build
      - name: Prepare
        run: npm run prepare

      # Check linter
      - name: Linter
        run: npm run lint -- --max-warnings=0

      # Build bundle
      - name: Build bundle
        if: ${{ success() }}
        run: npm run build

      # Prepare archive for deploying
      - name: Archive production artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
            name: dist-itowns
            path: |
                dist/**/*.js
                examples


  # Publish NPM package
  publish:
    need: [build]
    name: Publish NPM package
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    permissions:
        # id-token: write permission is required for npm provenance:
        # https://docs.npmjs.com/generating-provenance-statements#publishing-packages-with-provenance-via-github-actions
        id-token: write
        # contents: write is required for git push
        contents: write
    steps:

      - uses: actions/checkout@v4
        with:
          # fetch all branches
          fetch-depth: 0

      # Configure git user for later command induced commits
      - uses: fregante/setup-git-user@v1

      - uses: actions/setup-node@v4
        with:
          node-version: 22.17
          registry-url: https://registry.npmjs.org/

      - run: npm ci
      - run: npm run prepare

      - name: publish itowns@latest npm package
        if: ${{ startsWith(github.event.head_commit.message, 'release v' ) }}
        run: |
          npm version minor -m \"release v%s\"
          git push
          npm run publish-latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

